#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComputerShop.DAL.Linq2Sql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ComputerShop")]
	public partial class ComputerShopDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCPU(CPU instance);
    partial void UpdateCPU(CPU instance);
    partial void DeleteCPU(CPU instance);
    partial void InsertRamModule(RamModule instance);
    partial void UpdateRamModule(RamModule instance);
    partial void DeleteRamModule(RamModule instance);
    partial void InsertDesktopGPU(DesktopGPU instance);
    partial void UpdateDesktopGPU(DesktopGPU instance);
    partial void DeleteDesktopGPU(DesktopGPU instance);
    partial void InsertDesktopHDD(DesktopHDD instance);
    partial void UpdateDesktopHDD(DesktopHDD instance);
    partial void DeleteDesktopHDD(DesktopHDD instance);
    partial void InsertDesktopRamModule(DesktopRamModule instance);
    partial void UpdateDesktopRamModule(DesktopRamModule instance);
    partial void DeleteDesktopRamModule(DesktopRamModule instance);
    partial void InsertDesktop(Desktop instance);
    partial void UpdateDesktop(Desktop instance);
    partial void DeleteDesktop(Desktop instance);
    partial void InsertGPU(GPU instance);
    partial void UpdateGPU(GPU instance);
    partial void DeleteGPU(GPU instance);
    partial void InsertHDD(HDD instance);
    partial void UpdateHDD(HDD instance);
    partial void DeleteHDD(HDD instance);
    partial void InsertLaptopRamModule(LaptopRamModule instance);
    partial void UpdateLaptopRamModule(LaptopRamModule instance);
    partial void DeleteLaptopRamModule(LaptopRamModule instance);
    partial void InsertLaptop(Laptop instance);
    partial void UpdateLaptop(Laptop instance);
    partial void DeleteLaptop(Laptop instance);
    partial void InsertManufacturer(Manufacturer instance);
    partial void UpdateManufacturer(Manufacturer instance);
    partial void DeleteManufacturer(Manufacturer instance);
    #endregion
		
		public ComputerShopDataClassesDataContext() : 
				base("Data Source=DOMINUS-PC\\SQLEXPRESS;Initial Catalog=ComputerShop;Integrated Securit" +
						"y=True", mappingSource)
		{
			OnCreated();
		}
		
		public ComputerShopDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComputerShopDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComputerShopDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComputerShopDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CPU> CPUs
		{
			get
			{
				return this.GetTable<CPU>();
			}
		}
		
		public System.Data.Linq.Table<RamModule> RamModules
		{
			get
			{
				return this.GetTable<RamModule>();
			}
		}
		
		public System.Data.Linq.Table<DesktopGPU> DesktopGPUs
		{
			get
			{
				return this.GetTable<DesktopGPU>();
			}
		}
		
		public System.Data.Linq.Table<DesktopHDD> DesktopHDDs
		{
			get
			{
				return this.GetTable<DesktopHDD>();
			}
		}
		
		public System.Data.Linq.Table<DesktopRamModule> DesktopRamModules
		{
			get
			{
				return this.GetTable<DesktopRamModule>();
			}
		}
		
		public System.Data.Linq.Table<Desktop> Desktops
		{
			get
			{
				return this.GetTable<Desktop>();
			}
		}
		
		public System.Data.Linq.Table<GPU> GPUs
		{
			get
			{
				return this.GetTable<GPU>();
			}
		}
		
		public System.Data.Linq.Table<HDD> HDDs
		{
			get
			{
				return this.GetTable<HDD>();
			}
		}
		
		public System.Data.Linq.Table<LaptopRamModule> LaptopRamModules
		{
			get
			{
				return this.GetTable<LaptopRamModule>();
			}
		}
		
		public System.Data.Linq.Table<Laptop> Laptops
		{
			get
			{
				return this.GetTable<Laptop>();
			}
		}
		
		public System.Data.Linq.Table<Manufacturer> Manufacturers
		{
			get
			{
				return this.GetTable<Manufacturer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCPUByID")]
		public ISingleResult<CPU> GetCPUByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> cpu_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cpu_id);
			return ((ISingleResult<CPU>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CPUs")]
	public partial class CPU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CpuID;
		
		private int _ManufacturerID;
		
		private string _Model;
		
		private decimal _Price;
		
		private float _ClockSpeed;
		
		private string _NoOfCores;
		
		private string _CpuFormFactor;
		
		private EntitySet<Desktop> _Desktops;
		
		private EntitySet<Laptop> _Laptops;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCpuIDChanging(int value);
    partial void OnCpuIDChanged();
    partial void OnManufacturerIDChanging(int value);
    partial void OnManufacturerIDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnClockSpeedChanging(float value);
    partial void OnClockSpeedChanged();
    partial void OnNoOfCoresChanging(string value);
    partial void OnNoOfCoresChanged();
    partial void OnCpuFormFactorChanging(string value);
    partial void OnCpuFormFactorChanged();
    #endregion
		
		public CPU()
		{
			this._Desktops = new EntitySet<Desktop>(new Action<Desktop>(this.attach_Desktops), new Action<Desktop>(this.detach_Desktops));
			this._Laptops = new EntitySet<Laptop>(new Action<Laptop>(this.attach_Laptops), new Action<Laptop>(this.detach_Laptops));
			this._Manufacturer = default(EntityRef<Manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cpu_id", Storage="_CpuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CpuID
		{
			get
			{
				return this._CpuID;
			}
			set
			{
				if ((this._CpuID != value))
				{
					this.OnCpuIDChanging(value);
					this.SendPropertyChanging();
					this._CpuID = value;
					this.SendPropertyChanged("CpuID");
					this.OnCpuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="manufacturer_id", Storage="_ManufacturerID", DbType="Int NOT NULL")]
		public int ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="model", Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_Price", DbType="SmallMoney NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="clock_speed", Storage="_ClockSpeed", DbType="Decimal(3,2) NOT NULL")]
		public float ClockSpeed
		{
			get
			{
				return this._ClockSpeed;
			}
			set
			{
				if ((this._ClockSpeed != value))
				{
					this.OnClockSpeedChanging(value);
					this.SendPropertyChanging();
					this._ClockSpeed = value;
					this.SendPropertyChanged("ClockSpeed");
					this.OnClockSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="no_of_cores", Storage="_NoOfCores", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string NoOfCores
		{
			get
			{
				return this._NoOfCores;
			}
			set
			{
				if ((this._NoOfCores != value))
				{
					this.OnNoOfCoresChanging(value);
					this.SendPropertyChanging();
					this._NoOfCores = value;
					this.SendPropertyChanged("NoOfCores");
					this.OnNoOfCoresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cpu_form_factor", Storage="_CpuFormFactor", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CpuFormFactor
		{
			get
			{
				return this._CpuFormFactor;
			}
			set
			{
				if ((this._CpuFormFactor != value))
				{
					this.OnCpuFormFactorChanging(value);
					this.SendPropertyChanging();
					this._CpuFormFactor = value;
					this.SendPropertyChanged("CpuFormFactor");
					this.OnCpuFormFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_Desktop", Storage="_Desktops", ThisKey="CpuID", OtherKey="CpuID")]
		public EntitySet<Desktop> Desktops
		{
			get
			{
				return this._Desktops;
			}
			set
			{
				this._Desktops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_Laptop", Storage="_Laptops", ThisKey="CpuID", OtherKey="CpuID")]
		public EntitySet<Laptop> Laptops
		{
			get
			{
				return this._Laptops;
			}
			set
			{
				this._Laptops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_CPU", Storage="_Manufacturer", ThisKey="ManufacturerID", OtherKey="ManufacturerID", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.CPUs.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.CPUs.Add(this);
						this._ManufacturerID = value.ManufacturerID;
					}
					else
					{
						this._ManufacturerID = default(int);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Desktops(Desktop entity)
		{
			this.SendPropertyChanging();
			entity.CPU = this;
		}
		
		private void detach_Desktops(Desktop entity)
		{
			this.SendPropertyChanging();
			entity.CPU = null;
		}
		
		private void attach_Laptops(Laptop entity)
		{
			this.SendPropertyChanging();
			entity.CPU = this;
		}
		
		private void detach_Laptops(Laptop entity)
		{
			this.SendPropertyChanging();
			entity.CPU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RamModules")]
	public partial class RamModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RamID;
		
		private int _ManufacturerID;
		
		private string _Model;
		
		private decimal _Price;
		
		private ushort _ClockSpeed;
		
		private ushort _Size;
		
		private string _DDRVersion;
		
		private string _RamFormFactor;
		
		private EntitySet<DesktopRamModule> _DesktopRamModules;
		
		private EntitySet<LaptopRamModule> _LaptopRamModules;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRamIDChanging(int value);
    partial void OnRamIDChanged();
    partial void OnManufacturerIDChanging(int value);
    partial void OnManufacturerIDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnClockSpeedChanging(ushort value);
    partial void OnClockSpeedChanged();
    partial void OnSizeChanging(ushort value);
    partial void OnSizeChanged();
    partial void OnDDRVersionChanging(string value);
    partial void OnDDRVersionChanged();
    partial void OnRamFormFactorChanging(string value);
    partial void OnRamFormFactorChanged();
    #endregion
		
		public RamModule()
		{
			this._DesktopRamModules = new EntitySet<DesktopRamModule>(new Action<DesktopRamModule>(this.attach_DesktopRamModules), new Action<DesktopRamModule>(this.detach_DesktopRamModules));
			this._LaptopRamModules = new EntitySet<LaptopRamModule>(new Action<LaptopRamModule>(this.attach_LaptopRamModules), new Action<LaptopRamModule>(this.detach_LaptopRamModules));
			this._Manufacturer = default(EntityRef<Manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ram_id", Storage="_RamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RamID
		{
			get
			{
				return this._RamID;
			}
			set
			{
				if ((this._RamID != value))
				{
					this.OnRamIDChanging(value);
					this.SendPropertyChanging();
					this._RamID = value;
					this.SendPropertyChanged("RamID");
					this.OnRamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="manufacturer_id", Storage="_ManufacturerID", DbType="Int NOT NULL")]
		public int ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="model", Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_Price", DbType="SmallMoney NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bus_speed", Storage="_ClockSpeed", DbType="SmallInt NOT NULL")]
		public ushort ClockSpeed
		{
			get
			{
				return this._ClockSpeed;
			}
			set
			{
				if ((this._ClockSpeed != value))
				{
					this.OnClockSpeedChanging(value);
					this.SendPropertyChanging();
					this._ClockSpeed = value;
					this.SendPropertyChanged("ClockSpeed");
					this.OnClockSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="size", Storage="_Size", DbType="SmallInt NOT NULL")]
		public ushort Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ddr_version", Storage="_DDRVersion", DbType="NChar(4) NOT NULL", CanBeNull=false)]
		public string DDRVersion
		{
			get
			{
				return this._DDRVersion;
			}
			set
			{
				if ((this._DDRVersion != value))
				{
					this.OnDDRVersionChanging(value);
					this.SendPropertyChanging();
					this._DDRVersion = value;
					this.SendPropertyChanged("DDRVersion");
					this.OnDDRVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ram_form_factor", Storage="_RamFormFactor", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string RamFormFactor
		{
			get
			{
				return this._RamFormFactor;
			}
			set
			{
				if ((this._RamFormFactor != value))
				{
					this.OnRamFormFactorChanging(value);
					this.SendPropertyChanging();
					this._RamFormFactor = value;
					this.SendPropertyChanged("RamFormFactor");
					this.OnRamFormFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RamModule_DesktopRamModule", Storage="_DesktopRamModules", ThisKey="RamID", OtherKey="RamID")]
		public EntitySet<DesktopRamModule> DesktopRamModules
		{
			get
			{
				return this._DesktopRamModules;
			}
			set
			{
				this._DesktopRamModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RamModule_LaptopRamModule", Storage="_LaptopRamModules", ThisKey="RamID", OtherKey="RamID")]
		public EntitySet<LaptopRamModule> LaptopRamModules
		{
			get
			{
				return this._LaptopRamModules;
			}
			set
			{
				this._LaptopRamModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_RamModule", Storage="_Manufacturer", ThisKey="ManufacturerID", OtherKey="ManufacturerID", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.RamModules.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.RamModules.Add(this);
						this._ManufacturerID = value.ManufacturerID;
					}
					else
					{
						this._ManufacturerID = default(int);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DesktopRamModules(DesktopRamModule entity)
		{
			this.SendPropertyChanging();
			entity.RamModule = this;
		}
		
		private void detach_DesktopRamModules(DesktopRamModule entity)
		{
			this.SendPropertyChanging();
			entity.RamModule = null;
		}
		
		private void attach_LaptopRamModules(LaptopRamModule entity)
		{
			this.SendPropertyChanging();
			entity.RamModule = this;
		}
		
		private void detach_LaptopRamModules(LaptopRamModule entity)
		{
			this.SendPropertyChanging();
			entity.RamModule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DesktopGPUs")]
	public partial class DesktopGPU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesktopID;
		
		private int _GpuID;
		
		private int _Quantity;
		
		private EntityRef<Desktop> _Desktop;
		
		private EntityRef<GPU> _GPUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesktopIDChanging(int value);
    partial void OnDesktopIDChanged();
    partial void OnGpuIDChanging(int value);
    partial void OnGpuIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public DesktopGPU()
		{
			this._Desktop = default(EntityRef<Desktop>);
			this._GPUs = default(EntityRef<GPU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="desktop_id", Storage="_DesktopID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DesktopID
		{
			get
			{
				return this._DesktopID;
			}
			set
			{
				if ((this._DesktopID != value))
				{
					this.OnDesktopIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopID = value;
					this.SendPropertyChanged("DesktopID");
					this.OnDesktopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gpu_id", Storage="_GpuID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GpuID
		{
			get
			{
				return this._GpuID;
			}
			set
			{
				if ((this._GpuID != value))
				{
					this.OnGpuIDChanging(value);
					this.SendPropertyChanging();
					this._GpuID = value;
					this.SendPropertyChanged("GpuID");
					this.OnGpuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="quantity", Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Desktop_DesktopGPU", Storage="_Desktop", ThisKey="DesktopID", OtherKey="DesktopID", IsForeignKey=true)]
		public Desktop Desktop
		{
			get
			{
				return this._Desktop.Entity;
			}
			set
			{
				Desktop previousValue = this._Desktop.Entity;
				if (((previousValue != value) 
							|| (this._Desktop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Desktop.Entity = null;
						previousValue.DesktopGPUs.Remove(this);
					}
					this._Desktop.Entity = value;
					if ((value != null))
					{
						value.DesktopGPUs.Add(this);
						this._DesktopID = value.DesktopID;
					}
					else
					{
						this._DesktopID = default(int);
					}
					this.SendPropertyChanged("Desktop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GPU_DesktopGPU", Storage="_GPUs", ThisKey="GpuID", OtherKey="GpuID", IsForeignKey=true)]
		public GPU GPU
		{
			get
			{
				return this._GPUs.Entity;
			}
			set
			{
				GPU previousValue = this._GPUs.Entity;
				if (((previousValue != value) 
							|| (this._GPUs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GPUs.Entity = null;
						previousValue.DesktopGPUs.Remove(this);
					}
					this._GPUs.Entity = value;
					if ((value != null))
					{
						value.DesktopGPUs.Add(this);
						this._GpuID = value.GpuID;
					}
					else
					{
						this._GpuID = default(int);
					}
					this.SendPropertyChanged("GPU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DesktopHDDs")]
	public partial class DesktopHDD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesktopID;
		
		private int _HddID;
		
		private int _Quantity;
		
		private EntityRef<Desktop> _Desktop;
		
		private EntityRef<HDD> _HDD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesktopIDChanging(int value);
    partial void OnDesktopIDChanged();
    partial void OnHddIDChanging(int value);
    partial void OnHddIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public DesktopHDD()
		{
			this._Desktop = default(EntityRef<Desktop>);
			this._HDD = default(EntityRef<HDD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="desktop_id", Storage="_DesktopID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DesktopID
		{
			get
			{
				return this._DesktopID;
			}
			set
			{
				if ((this._DesktopID != value))
				{
					this.OnDesktopIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopID = value;
					this.SendPropertyChanged("DesktopID");
					this.OnDesktopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hdd_id", Storage="_HddID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HddID
		{
			get
			{
				return this._HddID;
			}
			set
			{
				if ((this._HddID != value))
				{
					this.OnHddIDChanging(value);
					this.SendPropertyChanging();
					this._HddID = value;
					this.SendPropertyChanged("HddID");
					this.OnHddIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="quantity", Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Desktop_DesktopHDD", Storage="_Desktop", ThisKey="DesktopID", OtherKey="DesktopID", IsForeignKey=true)]
		public Desktop Desktop
		{
			get
			{
				return this._Desktop.Entity;
			}
			set
			{
				Desktop previousValue = this._Desktop.Entity;
				if (((previousValue != value) 
							|| (this._Desktop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Desktop.Entity = null;
						previousValue.DesktopHDDs.Remove(this);
					}
					this._Desktop.Entity = value;
					if ((value != null))
					{
						value.DesktopHDDs.Add(this);
						this._DesktopID = value.DesktopID;
					}
					else
					{
						this._DesktopID = default(int);
					}
					this.SendPropertyChanged("Desktop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDD_DesktopHDD", Storage="_HDD", ThisKey="HddID", OtherKey="HddID", IsForeignKey=true)]
		public HDD HDD
		{
			get
			{
				return this._HDD.Entity;
			}
			set
			{
				HDD previousValue = this._HDD.Entity;
				if (((previousValue != value) 
							|| (this._HDD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HDD.Entity = null;
						previousValue.DesktopHDDs.Remove(this);
					}
					this._HDD.Entity = value;
					if ((value != null))
					{
						value.DesktopHDDs.Add(this);
						this._HddID = value.HddID;
					}
					else
					{
						this._HddID = default(int);
					}
					this.SendPropertyChanged("HDD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DesktopRamModules")]
	public partial class DesktopRamModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesktopID;
		
		private int _RamID;
		
		private int _Quantity;
		
		private EntityRef<RamModule> _RamModule;
		
		private EntityRef<Desktop> _Desktop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesktopIDChanging(int value);
    partial void OnDesktopIDChanged();
    partial void OnRamIDChanging(int value);
    partial void OnRamIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public DesktopRamModule()
		{
			this._RamModule = default(EntityRef<RamModule>);
			this._Desktop = default(EntityRef<Desktop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="desktop_id", Storage="_DesktopID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DesktopID
		{
			get
			{
				return this._DesktopID;
			}
			set
			{
				if ((this._DesktopID != value))
				{
					this.OnDesktopIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopID = value;
					this.SendPropertyChanged("DesktopID");
					this.OnDesktopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ram_id", Storage="_RamID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RamID
		{
			get
			{
				return this._RamID;
			}
			set
			{
				if ((this._RamID != value))
				{
					this.OnRamIDChanging(value);
					this.SendPropertyChanging();
					this._RamID = value;
					this.SendPropertyChanged("RamID");
					this.OnRamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="quantity", Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RamModule_DesktopRamModule", Storage="_RamModule", ThisKey="RamID", OtherKey="RamID", IsForeignKey=true)]
		public RamModule RamModule
		{
			get
			{
				return this._RamModule.Entity;
			}
			set
			{
				RamModule previousValue = this._RamModule.Entity;
				if (((previousValue != value) 
							|| (this._RamModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RamModule.Entity = null;
						previousValue.DesktopRamModules.Remove(this);
					}
					this._RamModule.Entity = value;
					if ((value != null))
					{
						value.DesktopRamModules.Add(this);
						this._RamID = value.RamID;
					}
					else
					{
						this._RamID = default(int);
					}
					this.SendPropertyChanged("RamModule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Desktop_DesktopRamModule", Storage="_Desktop", ThisKey="DesktopID", OtherKey="DesktopID", IsForeignKey=true)]
		public Desktop Desktop
		{
			get
			{
				return this._Desktop.Entity;
			}
			set
			{
				Desktop previousValue = this._Desktop.Entity;
				if (((previousValue != value) 
							|| (this._Desktop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Desktop.Entity = null;
						previousValue.DesktopRamModules.Remove(this);
					}
					this._Desktop.Entity = value;
					if ((value != null))
					{
						value.DesktopRamModules.Add(this);
						this._DesktopID = value.DesktopID;
					}
					else
					{
						this._DesktopID = default(int);
					}
					this.SendPropertyChanged("Desktop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Desktops")]
	public partial class Desktop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesktopID;
		
		private System.Nullable<int> _ManufacturerID;
		
		private string _Model;
		
		private decimal _Price;
		
		private int _CpuID;
		
		private System.Nullable<int> _MonitorID;
		
		private EntitySet<DesktopGPU> _DesktopGPUs;
		
		private EntitySet<DesktopHDD> _DesktopHDDs;
		
		private EntitySet<DesktopRamModule> _DesktopRamModules;
		
		private EntityRef<CPU> _CPUs;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesktopIDChanging(int value);
    partial void OnDesktopIDChanged();
    partial void OnManufacturerIDChanging(System.Nullable<int> value);
    partial void OnManufacturerIDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCpuIDChanging(int value);
    partial void OnCpuIDChanged();
    partial void OnMonitorIDChanging(System.Nullable<int> value);
    partial void OnMonitorIDChanged();
    #endregion
		
		public Desktop()
		{
			this._DesktopGPUs = new EntitySet<DesktopGPU>(new Action<DesktopGPU>(this.attach_DesktopGPUs), new Action<DesktopGPU>(this.detach_DesktopGPUs));
			this._DesktopHDDs = new EntitySet<DesktopHDD>(new Action<DesktopHDD>(this.attach_DesktopHDDs), new Action<DesktopHDD>(this.detach_DesktopHDDs));
			this._DesktopRamModules = new EntitySet<DesktopRamModule>(new Action<DesktopRamModule>(this.attach_DesktopRamModules), new Action<DesktopRamModule>(this.detach_DesktopRamModules));
			this._CPUs = default(EntityRef<CPU>);
			this._Manufacturer = default(EntityRef<Manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="desktop_id", Storage="_DesktopID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesktopID
		{
			get
			{
				return this._DesktopID;
			}
			set
			{
				if ((this._DesktopID != value))
				{
					this.OnDesktopIDChanging(value);
					this.SendPropertyChanging();
					this._DesktopID = value;
					this.SendPropertyChanged("DesktopID");
					this.OnDesktopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="manufacturer_id", Storage="_ManufacturerID", DbType="Int")]
		public System.Nullable<int> ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="model", Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_Price", DbType="SmallMoney NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cpu_id", Storage="_CpuID", DbType="Int NOT NULL")]
		public int CpuID
		{
			get
			{
				return this._CpuID;
			}
			set
			{
				if ((this._CpuID != value))
				{
					this.OnCpuIDChanging(value);
					this.SendPropertyChanging();
					this._CpuID = value;
					this.SendPropertyChanged("CpuID");
					this.OnCpuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="monitor_id", Storage="_MonitorID", DbType="Int")]
		public System.Nullable<int> MonitorID
		{
			get
			{
				return this._MonitorID;
			}
			set
			{
				if ((this._MonitorID != value))
				{
					this.OnMonitorIDChanging(value);
					this.SendPropertyChanging();
					this._MonitorID = value;
					this.SendPropertyChanged("MonitorID");
					this.OnMonitorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Desktop_DesktopGPU", Storage="_DesktopGPUs", ThisKey="DesktopID", OtherKey="DesktopID")]
		public EntitySet<DesktopGPU> DesktopGPUs
		{
			get
			{
				return this._DesktopGPUs;
			}
			set
			{
				this._DesktopGPUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Desktop_DesktopHDD", Storage="_DesktopHDDs", ThisKey="DesktopID", OtherKey="DesktopID")]
		public EntitySet<DesktopHDD> DesktopHDDs
		{
			get
			{
				return this._DesktopHDDs;
			}
			set
			{
				this._DesktopHDDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Desktop_DesktopRamModule", Storage="_DesktopRamModules", ThisKey="DesktopID", OtherKey="DesktopID")]
		public EntitySet<DesktopRamModule> DesktopRamModules
		{
			get
			{
				return this._DesktopRamModules;
			}
			set
			{
				this._DesktopRamModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_Desktop", Storage="_CPUs", ThisKey="CpuID", OtherKey="CpuID", IsForeignKey=true)]
		public CPU CPU
		{
			get
			{
				return this._CPUs.Entity;
			}
			set
			{
				CPU previousValue = this._CPUs.Entity;
				if (((previousValue != value) 
							|| (this._CPUs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CPUs.Entity = null;
						previousValue.Desktops.Remove(this);
					}
					this._CPUs.Entity = value;
					if ((value != null))
					{
						value.Desktops.Add(this);
						this._CpuID = value.CpuID;
					}
					else
					{
						this._CpuID = default(int);
					}
					this.SendPropertyChanged("CPU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Desktop", Storage="_Manufacturer", ThisKey="ManufacturerID", OtherKey="ManufacturerID", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.Desktops.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.Desktops.Add(this);
						this._ManufacturerID = value.ManufacturerID;
					}
					else
					{
						this._ManufacturerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DesktopGPUs(DesktopGPU entity)
		{
			this.SendPropertyChanging();
			entity.Desktop = this;
		}
		
		private void detach_DesktopGPUs(DesktopGPU entity)
		{
			this.SendPropertyChanging();
			entity.Desktop = null;
		}
		
		private void attach_DesktopHDDs(DesktopHDD entity)
		{
			this.SendPropertyChanging();
			entity.Desktop = this;
		}
		
		private void detach_DesktopHDDs(DesktopHDD entity)
		{
			this.SendPropertyChanging();
			entity.Desktop = null;
		}
		
		private void attach_DesktopRamModules(DesktopRamModule entity)
		{
			this.SendPropertyChanging();
			entity.Desktop = this;
		}
		
		private void detach_DesktopRamModules(DesktopRamModule entity)
		{
			this.SendPropertyChanging();
			entity.Desktop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GPUs")]
	public partial class GPU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GpuID;
		
		private int _ManufacturerID;
		
		private string _Model;
		
		private decimal _Price;
		
		private string _GpuModel;
		
		private ushort _GpuClockSpeed;
		
		private ushort _VRamSize;
		
		private ushort _VRamClockSpeed;
		
		private string _GDDRVersion;
		
		private string _GpuType;
		
		private EntitySet<DesktopGPU> _DesktopGPUs;
		
		private EntitySet<Laptop> _Laptops;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGpuIDChanging(int value);
    partial void OnGpuIDChanged();
    partial void OnManufacturerIDChanging(int value);
    partial void OnManufacturerIDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnGpuModelChanging(string value);
    partial void OnGpuModelChanged();
    partial void OnGpuClockSpeedChanging(ushort value);
    partial void OnGpuClockSpeedChanged();
    partial void OnVRamSizeChanging(ushort value);
    partial void OnVRamSizeChanged();
    partial void OnVRamClockSpeedChanging(ushort value);
    partial void OnVRamClockSpeedChanged();
    partial void OnGDDRVersionChanging(string value);
    partial void OnGDDRVersionChanged();
    partial void OnGpuTypeChanging(string value);
    partial void OnGpuTypeChanged();
    #endregion
		
		public GPU()
		{
			this._DesktopGPUs = new EntitySet<DesktopGPU>(new Action<DesktopGPU>(this.attach_DesktopGPUs), new Action<DesktopGPU>(this.detach_DesktopGPUs));
			this._Laptops = new EntitySet<Laptop>(new Action<Laptop>(this.attach_Laptops), new Action<Laptop>(this.detach_Laptops));
			this._Manufacturer = default(EntityRef<Manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gpu_id", Storage="_GpuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GpuID
		{
			get
			{
				return this._GpuID;
			}
			set
			{
				if ((this._GpuID != value))
				{
					this.OnGpuIDChanging(value);
					this.SendPropertyChanging();
					this._GpuID = value;
					this.SendPropertyChanged("GpuID");
					this.OnGpuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="manufacturer_id", Storage="_ManufacturerID", DbType="Int NOT NULL")]
		public int ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="model", Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_Price", DbType="SmallMoney NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gpu_model", Storage="_GpuModel", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string GpuModel
		{
			get
			{
				return this._GpuModel;
			}
			set
			{
				if ((this._GpuModel != value))
				{
					this.OnGpuModelChanging(value);
					this.SendPropertyChanging();
					this._GpuModel = value;
					this.SendPropertyChanged("GpuModel");
					this.OnGpuModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gpu_clock_speed", Storage="_GpuClockSpeed", DbType="SmallInt NOT NULL")]
		public ushort GpuClockSpeed
		{
			get
			{
				return this._GpuClockSpeed;
			}
			set
			{
				if ((this._GpuClockSpeed != value))
				{
					this.OnGpuClockSpeedChanging(value);
					this.SendPropertyChanging();
					this._GpuClockSpeed = value;
					this.SendPropertyChanged("GpuClockSpeed");
					this.OnGpuClockSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vram_size", Storage="_VRamSize", DbType="SmallInt NOT NULL")]
		public ushort VRamSize
		{
			get
			{
				return this._VRamSize;
			}
			set
			{
				if ((this._VRamSize != value))
				{
					this.OnVRamSizeChanging(value);
					this.SendPropertyChanging();
					this._VRamSize = value;
					this.SendPropertyChanged("VRamSize");
					this.OnVRamSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vram_clock_speed", Storage="_VRamClockSpeed", DbType="SmallInt NOT NULL")]
		public ushort VRamClockSpeed
		{
			get
			{
				return this._VRamClockSpeed;
			}
			set
			{
				if ((this._VRamClockSpeed != value))
				{
					this.OnVRamClockSpeedChanging(value);
					this.SendPropertyChanging();
					this._VRamClockSpeed = value;
					this.SendPropertyChanged("VRamClockSpeed");
					this.OnVRamClockSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="vram_type", Storage="_GDDRVersion", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string GDDRVersion
		{
			get
			{
				return this._GDDRVersion;
			}
			set
			{
				if ((this._GDDRVersion != value))
				{
					this.OnGDDRVersionChanging(value);
					this.SendPropertyChanging();
					this._GDDRVersion = value;
					this.SendPropertyChanged("GDDRVersion");
					this.OnGDDRVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gpu_type", Storage="_GpuType", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string GpuType
		{
			get
			{
				return this._GpuType;
			}
			set
			{
				if ((this._GpuType != value))
				{
					this.OnGpuTypeChanging(value);
					this.SendPropertyChanging();
					this._GpuType = value;
					this.SendPropertyChanged("GpuType");
					this.OnGpuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GPU_DesktopGPU", Storage="_DesktopGPUs", ThisKey="GpuID", OtherKey="GpuID")]
		public EntitySet<DesktopGPU> DesktopGPUs
		{
			get
			{
				return this._DesktopGPUs;
			}
			set
			{
				this._DesktopGPUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GPU_Laptop", Storage="_Laptops", ThisKey="GpuID", OtherKey="GpuID")]
		public EntitySet<Laptop> Laptops
		{
			get
			{
				return this._Laptops;
			}
			set
			{
				this._Laptops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_GPU", Storage="_Manufacturer", ThisKey="ManufacturerID", OtherKey="ManufacturerID", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.GPUs.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.GPUs.Add(this);
						this._ManufacturerID = value.ManufacturerID;
					}
					else
					{
						this._ManufacturerID = default(int);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DesktopGPUs(DesktopGPU entity)
		{
			this.SendPropertyChanging();
			entity.GPU = this;
		}
		
		private void detach_DesktopGPUs(DesktopGPU entity)
		{
			this.SendPropertyChanging();
			entity.GPU = null;
		}
		
		private void attach_Laptops(Laptop entity)
		{
			this.SendPropertyChanging();
			entity.GPU = this;
		}
		
		private void detach_Laptops(Laptop entity)
		{
			this.SendPropertyChanging();
			entity.GPU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HDDs")]
	public partial class HDD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HddID;
		
		private int _ManufacturerID;
		
		private string _Model;
		
		private decimal _Price;
		
		private ushort _Capacity;
		
		private ushort _Speed;
		
		private string _HddType;
		
		private string _HddFormFactor;
		
		private string _HddInterface;
		
		private EntitySet<DesktopHDD> _DesktopHDDs;
		
		private EntitySet<Laptop> _Laptops;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHddIDChanging(int value);
    partial void OnHddIDChanged();
    partial void OnManufacturerIDChanging(int value);
    partial void OnManufacturerIDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCapacityChanging(ushort value);
    partial void OnCapacityChanged();
    partial void OnSpeedChanging(ushort value);
    partial void OnSpeedChanged();
    partial void OnHddTypeChanging(string value);
    partial void OnHddTypeChanged();
    partial void OnHddFormFactorChanging(string value);
    partial void OnHddFormFactorChanged();
    partial void OnHddInterfaceChanging(string value);
    partial void OnHddInterfaceChanged();
    #endregion
		
		public HDD()
		{
			this._DesktopHDDs = new EntitySet<DesktopHDD>(new Action<DesktopHDD>(this.attach_DesktopHDDs), new Action<DesktopHDD>(this.detach_DesktopHDDs));
			this._Laptops = new EntitySet<Laptop>(new Action<Laptop>(this.attach_Laptops), new Action<Laptop>(this.detach_Laptops));
			this._Manufacturer = default(EntityRef<Manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hdd_id", Storage="_HddID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HddID
		{
			get
			{
				return this._HddID;
			}
			set
			{
				if ((this._HddID != value))
				{
					this.OnHddIDChanging(value);
					this.SendPropertyChanging();
					this._HddID = value;
					this.SendPropertyChanged("HddID");
					this.OnHddIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="manufacturer_id", Storage="_ManufacturerID", DbType="Int NOT NULL")]
		public int ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="model", Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_Price", DbType="SmallMoney NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="capacity", Storage="_Capacity", DbType="SmallInt NOT NULL")]
		public ushort Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="speed", Storage="_Speed", DbType="SmallInt NOT NULL")]
		public ushort Speed
		{
			get
			{
				return this._Speed;
			}
			set
			{
				if ((this._Speed != value))
				{
					this.OnSpeedChanging(value);
					this.SendPropertyChanging();
					this._Speed = value;
					this.SendPropertyChanged("Speed");
					this.OnSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hdd_type", Storage="_HddType", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string HddType
		{
			get
			{
				return this._HddType;
			}
			set
			{
				if ((this._HddType != value))
				{
					this.OnHddTypeChanging(value);
					this.SendPropertyChanging();
					this._HddType = value;
					this.SendPropertyChanged("HddType");
					this.OnHddTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hdd_form_factor", Storage="_HddFormFactor", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string HddFormFactor
		{
			get
			{
				return this._HddFormFactor;
			}
			set
			{
				if ((this._HddFormFactor != value))
				{
					this.OnHddFormFactorChanging(value);
					this.SendPropertyChanging();
					this._HddFormFactor = value;
					this.SendPropertyChanged("HddFormFactor");
					this.OnHddFormFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hdd_interface", Storage="_HddInterface", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string HddInterface
		{
			get
			{
				return this._HddInterface;
			}
			set
			{
				if ((this._HddInterface != value))
				{
					this.OnHddInterfaceChanging(value);
					this.SendPropertyChanging();
					this._HddInterface = value;
					this.SendPropertyChanged("HddInterface");
					this.OnHddInterfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDD_DesktopHDD", Storage="_DesktopHDDs", ThisKey="HddID", OtherKey="HddID")]
		public EntitySet<DesktopHDD> DesktopHDDs
		{
			get
			{
				return this._DesktopHDDs;
			}
			set
			{
				this._DesktopHDDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDD_Laptop", Storage="_Laptops", ThisKey="HddID", OtherKey="HddID")]
		public EntitySet<Laptop> Laptops
		{
			get
			{
				return this._Laptops;
			}
			set
			{
				this._Laptops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_HDD", Storage="_Manufacturer", ThisKey="ManufacturerID", OtherKey="ManufacturerID", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.HDDs.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.HDDs.Add(this);
						this._ManufacturerID = value.ManufacturerID;
					}
					else
					{
						this._ManufacturerID = default(int);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DesktopHDDs(DesktopHDD entity)
		{
			this.SendPropertyChanging();
			entity.HDD = this;
		}
		
		private void detach_DesktopHDDs(DesktopHDD entity)
		{
			this.SendPropertyChanging();
			entity.HDD = null;
		}
		
		private void attach_Laptops(Laptop entity)
		{
			this.SendPropertyChanging();
			entity.HDD = this;
		}
		
		private void detach_Laptops(Laptop entity)
		{
			this.SendPropertyChanging();
			entity.HDD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LaptopRamModules")]
	public partial class LaptopRamModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LaptopID;
		
		private int _RamID;
		
		private int _Quantity;
		
		private EntityRef<RamModule> _RamModule;
		
		private EntityRef<Laptop> _Laptop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLaptopIDChanging(int value);
    partial void OnLaptopIDChanged();
    partial void OnRamIDChanging(int value);
    partial void OnRamIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public LaptopRamModule()
		{
			this._RamModule = default(EntityRef<RamModule>);
			this._Laptop = default(EntityRef<Laptop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="laptop_id", Storage="_LaptopID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LaptopID
		{
			get
			{
				return this._LaptopID;
			}
			set
			{
				if ((this._LaptopID != value))
				{
					this.OnLaptopIDChanging(value);
					this.SendPropertyChanging();
					this._LaptopID = value;
					this.SendPropertyChanged("LaptopID");
					this.OnLaptopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ram_id", Storage="_RamID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RamID
		{
			get
			{
				return this._RamID;
			}
			set
			{
				if ((this._RamID != value))
				{
					this.OnRamIDChanging(value);
					this.SendPropertyChanging();
					this._RamID = value;
					this.SendPropertyChanged("RamID");
					this.OnRamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="quantity", Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RamModule_LaptopRamModule", Storage="_RamModule", ThisKey="RamID", OtherKey="RamID", IsForeignKey=true)]
		public RamModule RamModule
		{
			get
			{
				return this._RamModule.Entity;
			}
			set
			{
				RamModule previousValue = this._RamModule.Entity;
				if (((previousValue != value) 
							|| (this._RamModule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RamModule.Entity = null;
						previousValue.LaptopRamModules.Remove(this);
					}
					this._RamModule.Entity = value;
					if ((value != null))
					{
						value.LaptopRamModules.Add(this);
						this._RamID = value.RamID;
					}
					else
					{
						this._RamID = default(int);
					}
					this.SendPropertyChanged("RamModule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laptop_LaptopRamModule", Storage="_Laptop", ThisKey="LaptopID", OtherKey="LaptopID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Laptop Laptop
		{
			get
			{
				return this._Laptop.Entity;
			}
			set
			{
				Laptop previousValue = this._Laptop.Entity;
				if (((previousValue != value) 
							|| (this._Laptop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Laptop.Entity = null;
						previousValue.LaptopRamModules.Remove(this);
					}
					this._Laptop.Entity = value;
					if ((value != null))
					{
						value.LaptopRamModules.Add(this);
						this._LaptopID = value.LaptopID;
					}
					else
					{
						this._LaptopID = default(int);
					}
					this.SendPropertyChanged("Laptop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Laptops")]
	public partial class Laptop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LaptopID;
		
		private int _ManufacturerID;
		
		private string _Model;
		
		private decimal _Price;
		
		private byte _Weight;
		
		private byte _BatteryLife;
		
		private float _DisplaySize;
		
		private int _CpuID;
		
		private int _HddID;
		
		private int _GpuID;
		
		private EntitySet<LaptopRamModule> _LaptopRamModules;
		
		private EntityRef<CPU> _CPUs;
		
		private EntityRef<GPU> _GPUs;
		
		private EntityRef<HDD> _HDD;
		
		private EntityRef<Manufacturer> _Manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLaptopIDChanging(int value);
    partial void OnLaptopIDChanged();
    partial void OnManufacturerIDChanging(int value);
    partial void OnManufacturerIDChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnWeightChanging(byte value);
    partial void OnWeightChanged();
    partial void OnBatteryLifeChanging(byte value);
    partial void OnBatteryLifeChanged();
    partial void OnDisplaySizeChanging(float value);
    partial void OnDisplaySizeChanged();
    partial void OnCpuIDChanging(int value);
    partial void OnCpuIDChanged();
    partial void OnHddIDChanging(int value);
    partial void OnHddIDChanged();
    partial void OnGpuIDChanging(int value);
    partial void OnGpuIDChanged();
    #endregion
		
		public Laptop()
		{
			this._LaptopRamModules = new EntitySet<LaptopRamModule>(new Action<LaptopRamModule>(this.attach_LaptopRamModules), new Action<LaptopRamModule>(this.detach_LaptopRamModules));
			this._CPUs = default(EntityRef<CPU>);
			this._GPUs = default(EntityRef<GPU>);
			this._HDD = default(EntityRef<HDD>);
			this._Manufacturer = default(EntityRef<Manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="laptop_id", Storage="_LaptopID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LaptopID
		{
			get
			{
				return this._LaptopID;
			}
			set
			{
				if ((this._LaptopID != value))
				{
					this.OnLaptopIDChanging(value);
					this.SendPropertyChanging();
					this._LaptopID = value;
					this.SendPropertyChanged("LaptopID");
					this.OnLaptopIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="manufacturer_id", Storage="_ManufacturerID", DbType="Int NOT NULL")]
		public int ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="model", Storage="_Model", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="price", Storage="_Price", DbType="SmallMoney NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="weight", Storage="_Weight", DbType="TinyInt NOT NULL")]
		public byte Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="battery_life", Storage="_BatteryLife", DbType="TinyInt NOT NULL")]
		public byte BatteryLife
		{
			get
			{
				return this._BatteryLife;
			}
			set
			{
				if ((this._BatteryLife != value))
				{
					this.OnBatteryLifeChanging(value);
					this.SendPropertyChanging();
					this._BatteryLife = value;
					this.SendPropertyChanged("BatteryLife");
					this.OnBatteryLifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="display_size", Storage="_DisplaySize", DbType="Decimal(3,1) NOT NULL")]
		public float DisplaySize
		{
			get
			{
				return this._DisplaySize;
			}
			set
			{
				if ((this._DisplaySize != value))
				{
					this.OnDisplaySizeChanging(value);
					this.SendPropertyChanging();
					this._DisplaySize = value;
					this.SendPropertyChanged("DisplaySize");
					this.OnDisplaySizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cpu_id", Storage="_CpuID", DbType="Int NOT NULL")]
		public int CpuID
		{
			get
			{
				return this._CpuID;
			}
			set
			{
				if ((this._CpuID != value))
				{
					this.OnCpuIDChanging(value);
					this.SendPropertyChanging();
					this._CpuID = value;
					this.SendPropertyChanged("CpuID");
					this.OnCpuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hdd_id", Storage="_HddID", DbType="Int NOT NULL")]
		public int HddID
		{
			get
			{
				return this._HddID;
			}
			set
			{
				if ((this._HddID != value))
				{
					this.OnHddIDChanging(value);
					this.SendPropertyChanging();
					this._HddID = value;
					this.SendPropertyChanged("HddID");
					this.OnHddIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gpu_id", Storage="_GpuID", DbType="Int NOT NULL")]
		public int GpuID
		{
			get
			{
				return this._GpuID;
			}
			set
			{
				if ((this._GpuID != value))
				{
					this.OnGpuIDChanging(value);
					this.SendPropertyChanging();
					this._GpuID = value;
					this.SendPropertyChanged("GpuID");
					this.OnGpuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Laptop_LaptopRamModule", Storage="_LaptopRamModules", ThisKey="LaptopID", OtherKey="LaptopID")]
		public EntitySet<LaptopRamModule> LaptopRamModules
		{
			get
			{
				return this._LaptopRamModules;
			}
			set
			{
				this._LaptopRamModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CPU_Laptop", Storage="_CPUs", ThisKey="CpuID", OtherKey="CpuID", IsForeignKey=true)]
		public CPU CPU
		{
			get
			{
				return this._CPUs.Entity;
			}
			set
			{
				CPU previousValue = this._CPUs.Entity;
				if (((previousValue != value) 
							|| (this._CPUs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CPUs.Entity = null;
						previousValue.Laptops.Remove(this);
					}
					this._CPUs.Entity = value;
					if ((value != null))
					{
						value.Laptops.Add(this);
						this._CpuID = value.CpuID;
					}
					else
					{
						this._CpuID = default(int);
					}
					this.SendPropertyChanged("CPU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GPU_Laptop", Storage="_GPUs", ThisKey="GpuID", OtherKey="GpuID", IsForeignKey=true)]
		public GPU GPU
		{
			get
			{
				return this._GPUs.Entity;
			}
			set
			{
				GPU previousValue = this._GPUs.Entity;
				if (((previousValue != value) 
							|| (this._GPUs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GPUs.Entity = null;
						previousValue.Laptops.Remove(this);
					}
					this._GPUs.Entity = value;
					if ((value != null))
					{
						value.Laptops.Add(this);
						this._GpuID = value.GpuID;
					}
					else
					{
						this._GpuID = default(int);
					}
					this.SendPropertyChanged("GPU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDD_Laptop", Storage="_HDD", ThisKey="HddID", OtherKey="HddID", IsForeignKey=true)]
		public HDD HDD
		{
			get
			{
				return this._HDD.Entity;
			}
			set
			{
				HDD previousValue = this._HDD.Entity;
				if (((previousValue != value) 
							|| (this._HDD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HDD.Entity = null;
						previousValue.Laptops.Remove(this);
					}
					this._HDD.Entity = value;
					if ((value != null))
					{
						value.Laptops.Add(this);
						this._HddID = value.HddID;
					}
					else
					{
						this._HddID = default(int);
					}
					this.SendPropertyChanged("HDD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Laptop", Storage="_Manufacturer", ThisKey="ManufacturerID", OtherKey="ManufacturerID", IsForeignKey=true)]
		public Manufacturer Manufacturer
		{
			get
			{
				return this._Manufacturer.Entity;
			}
			set
			{
				Manufacturer previousValue = this._Manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._Manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manufacturer.Entity = null;
						previousValue.Laptops.Remove(this);
					}
					this._Manufacturer.Entity = value;
					if ((value != null))
					{
						value.Laptops.Add(this);
						this._ManufacturerID = value.ManufacturerID;
					}
					else
					{
						this._ManufacturerID = default(int);
					}
					this.SendPropertyChanged("Manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LaptopRamModules(LaptopRamModule entity)
		{
			this.SendPropertyChanging();
			entity.Laptop = this;
		}
		
		private void detach_LaptopRamModules(LaptopRamModule entity)
		{
			this.SendPropertyChanging();
			entity.Laptop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manufacturers")]
	public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ManufacturerID;
		
		private string _Name;
		
		private EntitySet<CPU> _CPUs;
		
		private EntitySet<RamModule> _RamModules;
		
		private EntitySet<Desktop> _Desktops;
		
		private EntitySet<GPU> _GPUs;
		
		private EntitySet<HDD> _HDDs;
		
		private EntitySet<Laptop> _Laptops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManufacturerIDChanging(int value);
    partial void OnManufacturerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Manufacturer()
		{
			this._CPUs = new EntitySet<CPU>(new Action<CPU>(this.attach_CPUs), new Action<CPU>(this.detach_CPUs));
			this._RamModules = new EntitySet<RamModule>(new Action<RamModule>(this.attach_RamModules), new Action<RamModule>(this.detach_RamModules));
			this._Desktops = new EntitySet<Desktop>(new Action<Desktop>(this.attach_Desktops), new Action<Desktop>(this.detach_Desktops));
			this._GPUs = new EntitySet<GPU>(new Action<GPU>(this.attach_GPUs), new Action<GPU>(this.detach_GPUs));
			this._HDDs = new EntitySet<HDD>(new Action<HDD>(this.attach_HDDs), new Action<HDD>(this.detach_HDDs));
			this._Laptops = new EntitySet<Laptop>(new Action<Laptop>(this.attach_Laptops), new Action<Laptop>(this.detach_Laptops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="manufacturer_id", Storage="_ManufacturerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_CPU", Storage="_CPUs", ThisKey="ManufacturerID", OtherKey="ManufacturerID")]
		public EntitySet<CPU> CPUs
		{
			get
			{
				return this._CPUs;
			}
			set
			{
				this._CPUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_RamModule", Storage="_RamModules", ThisKey="ManufacturerID", OtherKey="ManufacturerID")]
		public EntitySet<RamModule> RamModules
		{
			get
			{
				return this._RamModules;
			}
			set
			{
				this._RamModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Desktop", Storage="_Desktops", ThisKey="ManufacturerID", OtherKey="ManufacturerID")]
		public EntitySet<Desktop> Desktops
		{
			get
			{
				return this._Desktops;
			}
			set
			{
				this._Desktops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_GPU", Storage="_GPUs", ThisKey="ManufacturerID", OtherKey="ManufacturerID")]
		public EntitySet<GPU> GPUs
		{
			get
			{
				return this._GPUs;
			}
			set
			{
				this._GPUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_HDD", Storage="_HDDs", ThisKey="ManufacturerID", OtherKey="ManufacturerID")]
		public EntitySet<HDD> HDDs
		{
			get
			{
				return this._HDDs;
			}
			set
			{
				this._HDDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Manufacturer_Laptop", Storage="_Laptops", ThisKey="ManufacturerID", OtherKey="ManufacturerID")]
		public EntitySet<Laptop> Laptops
		{
			get
			{
				return this._Laptops;
			}
			set
			{
				this._Laptops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CPUs(CPU entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_CPUs(CPU entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
		
		private void attach_RamModules(RamModule entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_RamModules(RamModule entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
		
		private void attach_Desktops(Desktop entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_Desktops(Desktop entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
		
		private void attach_GPUs(GPU entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_GPUs(GPU entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
		
		private void attach_HDDs(HDD entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_HDDs(HDD entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
		
		private void attach_Laptops(Laptop entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = this;
		}
		
		private void detach_Laptops(Laptop entity)
		{
			this.SendPropertyChanging();
			entity.Manufacturer = null;
		}
	}
}
#pragma warning restore 1591
